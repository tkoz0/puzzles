function Zipline(){var a=this;a.constructor();a.uis.puzzle=["Master Mind"];var l=[0,0,1,-1],m=[1,-1,0,0];a.enable.values=!1;a.enable.currentValue=!1;a.charToValue=a.charToValue.concat(["/",nil,"-",nil,",",nil]);a.init=function(){Object.getPrototypeOf(a).init.call(a)};a.reset2=function(){try{a.size.z=0;if(a.level.problem){var d=0;var h=a.level.problem.replace(/\s+/g," ").trim().split(" ");for(var b=0;b<a.size.y;b++)for(var c=0;c<a.size.x;c++){var g=a.board.c[c][b];var e=h[d++];g.label="."==e||"-"==
e?nil:parseInt(e);g.label!=nil?g.fixed=!0:a.size.z++}}if(a.level.solution)for(d=0,h=a.level.solution.replace(/\s+/g," ").trim().split(" "),b=0;b<a.size.y;b++)for(c=0;c<a.size.x;c++)g=a.board.c[c][b],e=h[d++],g.solution="."==e||"-"==e?nil:parseInt(e);a.cell.min=1;a.cell.max=a.size.z;a.infoText=a.uis.get("numbers")+": 1~"+a.size.z;a.keypadValues=a.keypad.numbers}catch(f){throw a.exception(f),f;}};a.check2=function(){try{for(var d=[],h=1;h<=a.size.z;h++)d[h]=null;for(var b=0;b<a.size.x;b++)for(var c=
0;c<a.size.y;c++)a.board.c[b][c].label==nil&&(a.board.c[b][c].value==nil?a.board.c[b][c].error=1:null==d[a.board.c[b][c].value]?d[a.board.c[b][c].value]=a.board.c[b][c]:a.board.c[b][c].error=d[a.board.c[b][c].value].error=4);for(h=1;h<=a.size.z;h++)null==d[h]&&(a.solved=!1);for(b=0;b<a.size.x;b++)for(c=0;c<a.size.y;c++)if(a.board.c[b][c].label!=nil){for(var g=d=0;4>g;g++){var e=b+l[g],f=c+m[g];0<=e&&e<a.size.x&&0<=f&&f<a.size.y&&a.board.c[e][f].label==nil&&(d+=a.board.c[e][f].value)}a.board.c[b][c].label!=
d&&(a.board.c[b][c].error=3)}f=e=nil;for(b=0;b<a.size.x;b++)for(c=0;c<a.size.y;c++)1==a.board.c[b][c].value&&(e=b,f=c);if(e==nil||f==nil)a.solved=!1;else a:for(g=2;g<=a.size.z;g++)for(b=0;b<a.size.x;b++)for(c=0;c<a.size.y;c++)if(a.board.c[b][c].value==g)if(0==g%2)if(e==b||f==c){e=b;f=c;continue a}else{a.board.c[e][f].error=a.board.c[b][c].error=2;break a}else if(Math.abs(e-b)==Math.abs(f-c)){e=b;f=c;continue a}else{a.board.c[e][f].error=a.board.c[b][c].error=2;break a}}catch(k){throw a.exception(k),
k;}};a.paintCell=function(d){try{var h=a.canvas.getContext("2d");h.fillStyle=d.label!=nil?a.uic.black:a.uic.light[d.color];h.fillRect(d.px,d.py,a.unit.x,a.unit.y);a.paintSymbolMarkers(d);d.label!=nil&&a.paintText(d.label.toString(),d,{color:a.uic.white});d.value!=nil&&a.paintText(d.value.toString(),d);d.error&&a.display.errors&&(d.value==nil&&d.label==nil?a.paintErrorDot(d):a.paintErrorCircle(d))}catch(b){throw a.exception(b),b;}}}Zipline.prototype=new Puzzle;
